---
# Cortex -----------------------------------------------------------------------
cortex_domain: 'cortex.status.im'
cortex_port: 9001

# Paths
cortex_conf_path: '/data/cortex/conf'
cortex_logs_path: '/data/cortex/logs'

# Cortex application secret
cortex_http_secret: '{{ lookup("passwordstore", "services/Cortex/App/http-secret") }}'

# ElasticSearch cluster
cortex_search_cluster_name: 'cortex'
# Fetched in pre_tasks
cortex_search_nodes: |
  {{ elasticsearch_services.json
    | json_query('[].{ name: Node, addr: ServiceAddress, port: ServicePort }')
    | list }}

# GitHub OAuth details
cortex_oauth_client_id: '{{ lookup("passwordstore", "services/Cortex/OAuth/client-id") }}'
cortex_oauth_client_secret: '{{ lookup("passwordstore", "services/Cortex/OAuth/client-secret") }}'
cortex_oauth_org_name: 'status-im'

# The Hive ---------------------------------------------------------------------
the_hive_domain: 'hive.status.im'
the_hive_port: 9000

# TheHive application secret
the_hive_app_http_secret: '{{ lookup("passwordstore", "services/TheHive/App/http-secret") }}'

# Paths
the_hive_conf_path: '/data/thehive/conf'
the_hive_data_path: '/data/thehive/data'
the_hive_logs_path: '/data/thehive/logs'

# GitHub OAuth
the_hive_oauth_client_id: '{{ lookup("passwordstore", "services/TheHive/OAuth/client-id") }}'
the_hive_oauth_client_secret: '{{ lookup("passwordstore", "services/TheHive/OAuth/client-secret") }}'
the_hive_oauth_org_name: 'status-im'

# Cassandra auth
the_hive_db_user: '{{ lookup("passwordstore", "services/TheHive/Cassandra/user") }}'
the_hive_db_pass: '{{ lookup("passwordstore", "services/TheHive/Cassandra/pass") }}'

# Fetched in pre_tasks
the_hive_db_hosts: |
  {{ cassandra_services.json
    | json_query('[].{ name: Node, addr: ServiceAddress, port: ServicePort }')
    | list }}

# Open Ports -------------------------------------------------------------------

# Open Nginx Ports
open_ports_comment: 'HTTP & HTTPS'
open_ports_list:
  - { port: 80, protocol: 'tcp' }
  - { port: 443, protocol: 'tcp' }

# Nginx Proxy ------------------------------------------------------------------

# Proxy for The Hive UI
nginx_sites:
  the_hive_http:
    - listen 80
    - server_name {{ the_hive_domain }}
    - return 302 https://$server_name$request_uri

  the_hive_https:
    - listen 443 ssl
    - server_name {{ the_hive_domain }}

    - ssl_certificate     /certs/status.im/origin.crt
    - ssl_certificate_key /certs/status.im/origin.key

    - location / {
        proxy_pass http://127.0.0.1:{{ the_hive_port }}/;
        proxy_http_version  1.1;
        proxy_cache_bypass  $http_upgrade;
        proxy_read_timeout 3600;
        proxy_set_header Upgrade           $http_upgrade;
        proxy_set_header Connection        "upgrade";
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-Port  $server_port;
      }

  cortex_http:
    - listen 80
    - server_name {{ cortex_domain }}
    - return 302 https://$server_name$request_uri

  cortex_https:
    - listen 443 ssl
    - server_name {{ cortex_domain }}

    - ssl_certificate     /certs/status.im/origin.crt
    - ssl_certificate_key /certs/status.im/origin.key

    - location / {
        proxy_pass http://127.0.0.1:{{ cortex_port }}/;
        proxy_http_version  1.1;
        proxy_cache_bypass  $http_upgrade;
        proxy_read_timeout 3600;
        proxy_set_header Upgrade           $http_upgrade;
        proxy_set_header Connection        "upgrade";
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-Port  $server_port;
      }
